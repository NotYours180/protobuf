Source: protobuf
Section: devel
Priority: optional
Maintainer: Andres Calderon <andres.calderon@admobilize.com>
Uploaders: Kevin Patino <kevin.patino@admobilize.com>
Build-Depends:
# Debian build system
 dpkg-dev (>= 1.16.1~)
 , debhelper (>= 9)
 , dh-autoreconf
# C/C++
 , g++ (>= 4:4.7)
 , zlib1g-dev
# Manpage generator
 , xmlto
# Tests
 , unzip
Standards-Version: 3.9.5
Homepage: https://code.google.com/p/protobuf/
Vcs-Browser: http://anonscm.debian.org/gitweb/?p=collab-maint/protobuf.git
Vcs-Git: git://anonscm.debian.org/collab-maint/protobuf.git
X-Python-Version: >= 2.7

Package: libprotobuf12
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: protocol buffers C++ library
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the runtime library needed for C++ applications.

Package: libprotobuf-lite12
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: protocol buffers C++ library (lite version)
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the runtime library needed for C++ applications whose
 message definitions have the "lite runtime" optimization setting.

Package: libprotobuf-dev
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends}, zlib1g-dev,
 libprotobuf12 (= ${binary:Version}), libprotobuf-lite12 (= ${binary:Version})
Description: protocol buffers C++ library (development files)
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the development headers and static libraries needed for
 writing C++ applications.

Package: libprotoc12
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: protocol buffers compiler library
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the runtime library needed for the protocol buffer
 compiler.

Package: libprotoc-dev
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 libprotoc12 (= ${binary:Version}), libprotobuf-dev (= ${binary:Version})
Replaces: libprotobuf-dev (<< 3.0.0)
Breaks: libprotobuf-dev (<< 3.0.0)
Description: protocol buffers compiler library (development files)
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the development headers and static library needed for
 writing protobuf compilers.

Package: protobuf-compiler
Architecture: any
Multi-Arch: foreign
Depends: ${shlibs:Depends}, ${misc:Depends}, libprotoc12 (= ${binary:Version})
Description: compiler for protocol buffer definition files
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the protocol buffer compiler that is used for
 translating from .proto files (containing the definitions) to the language
 binding for the supported languages.

